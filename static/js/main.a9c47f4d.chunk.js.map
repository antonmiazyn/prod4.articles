{"version":3,"sources":["components/Header/Logotype.js","components/Header/index.js","components/Content/Article.js","components/Content/index.js","components/Editor/index.js","components/Content/ShowMoreButton.js","components/Content/list.js","App.js","serviceWorker.js","index.js"],"names":["Logotype","props","siteName","className","href","Header","showHidderButton","showEditButton","showActiveButton","Article","title","text","Content","Array","articlesList","map","item","key","id","Editor","type","placeholder","onChange","settingTitle","value","titleEmpty","rows","settingText","textEmpty","addedArticlesCounter","onClick","addingElement","clearingFields","ShowMoreButton","itteratorUp","list","App","listC","slice","c","length","state","articlesToShow","articlesHidden","showButton","hidePanelButton","moreButton","articlesCounter","itterator","editorVisible","showActive","articlesHidderButton","userTitle","userText","handleShowList","bind","elementsCounterAdd","addElement","editPanelOPening","setTitle","setText","clearFields","deleteArticles","shortList","elementsCounter","this","setState","event","target","push","i","splice","moreButtonRender","console","log","editorRender","activeButtonRender","activeEditRender","edditorButtonRender","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a9c47f4d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css';\r\n\r\nfunction Logotype(props) {\r\n  let siteName = ['Articles', '.REACT'];\r\n\r\n  return(\r\n      <div className=\"header__logotype\">\r\n        <h2>\r\n          <a href=\"/\">{siteName[0]}<span>{siteName[1]}</span></a>\r\n        </h2>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Logotype;\r\n","import React from 'react';\r\nimport Logotype from './Logotype';\r\nimport './header.css';\r\n\r\nfunction Header(props) {\r\n  return(\r\n    <header>\r\n      <Logotype />\r\n      <div className=\"header__linker\">\r\n        {props.showHidderButton}\r\n        {props.showEditButton}\r\n        {props.showActiveButton}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Article(props) {\r\n  return(\r\n    <div className=\"acticle__container\">\r\n      <h2>{props.title}</h2>\r\n      <p>\r\n        {props.text}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Article;\r\n","import React from 'react';\r\nimport Article from './Article';\r\n\r\nfunction Content(props) {\r\n  let articlesGenerate = new Array();\r\n  articlesGenerate = props.articlesList.map(item => (\r\n    <Article\r\n      key = {item.id}\r\n      title = {item.title}\r\n      text = {item.text}\r\n    />\r\n    )\r\n  );\r\n  return (\r\n    articlesGenerate\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport './editor.css';\r\n\r\nfunction Editor(props) {\r\n  return(\r\n    <div className=\"editor__form\">\r\n      <h2>Add new article</h2>\r\n      <fieldset>\r\n        <input type=\"text\" placeholder=\"Enter a title\" onChange={props.settingTitle} value={props.titleEmpty}/>\r\n        <textarea type=\"text\" placeholder=\"Write the text\" rows=\"10\" onChange={props.settingText} value={props.textEmpty}></textarea>\r\n      </fieldset>\r\n      <div className=\"editor__counter\">You just added: {props.addedArticlesCounter} articles</div>\r\n      <button onClick={props.addingElement}>Create Article</button>\r\n      <button className=\"clear_button\" onClick={props.clearingFields}>Clear fields</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n","import React from 'react';\r\n\r\nfunction ShowMoreButton(props) {\r\n  return(\r\n    <button className=\"more__button\" onClick={props.itteratorUp}>\r\n      Show More\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default ShowMoreButton;\r\n","let list = new Array();\r\n\r\nlist = [\r\n  {\r\n    id: -1,\r\n    title: 'template',\r\n    text: 'template'\r\n  }\r\n];\r\n\r\nexport default list;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport Content from './components/Content';\nimport Editor from './components/Editor';\nimport ShowMoreButton from './components/Content/ShowMoreButton';\nimport list from './components/Content/list.js';\nimport './components/Content/content.css';\n\n  /*=================================================*/\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.listC = new Array();\n    this.listC = list.slice();\n    this.c = list.length - 1;\n\n    this.state = {\n      articlesToShow: [],\n      articlesHidden: false,\n      showButton: 'Show Articles',\n      hidePanelButton: 'Hide Panel',\n      moreButton: false,\n      articlesCounter: this.listC.length -= 1,\n      itterator: 4,\n      editorVisible: true,\n      showActive: false,\n      articlesHidderButton: true,\n      userTitle: '',\n      userText: ''\n    }\n\n    this.handleShowList = this.handleShowList.bind(this);\n    this.elementsCounterAdd = this.elementsCounterAdd.bind(this);\n    this.addElement = this.addElement.bind(this);\n    this.editPanelOPening = this.editPanelOPening.bind(this);\n    this.setTitle = this.setTitle.bind(this);\n    this.setText = this.setText.bind(this);\n    this.clearFields = this.clearFields.bind(this);\n    this.deleteArticles = this.deleteArticles.bind(this);\n\n    this.shortList = new Array();\n\n    this.elementsCounter = this.state.itterator;\n  }\n\n  /*=================================================*/\n\n  editPanelOPening() {\n    this.setState({\n      articlesToShow: [],\n      moreButton: false,\n      showButton: 'Show Articles',\n      showActive: !this.state.showActive,\n      editorVisible: !this.state.editorVisible,\n    })\n    if(!this.state.editorVisible) {\n      this.setState({\n        hidePanelButton: 'Hide Panel'\n      })\n    } else {\n      this.setState({\n        hidePanelButton: 'Edit Panel'\n      })\n    }\n  }\n\n  /*=================================================*/\n\n  setTitle(event) {\n    this.setState({\n      userTitle: event.target.value\n    })\n  }\n\n  /*=================================================*/\n\n  setText(event) {\n    this.setState({\n      userText: event.target.value\n    })\n  }\n\n  /*=================================================*/\n\n  addElement() {\n    this.listC.push({\n      id: this.c,\n      title: this.state.userTitle,\n      text: this.state.userText\n    })\n    this.c += 1;\n\n    this.setState({\n      articlesCounter: this.state.articlesCounter += 1\n    })\n  }\n\n  /*=================================================*/\n\n  elementsCounterAdd() {\n    this.setState({\n      itterator: this.state.itterator += 4\n    })\n    this.elementsCounter = this.state.itterator;\n\n    if(this.state.articlesCounter > this.elementsCounter) {\n      this.setState({\n        articlesToShow: this.shortList,\n      })\n    } else {\n      this.setState({\n        articlesToShow: this.listC,\n      })\n    }\n    for(let i = 0; i < this.elementsCounter; i++) {\n      this.shortList[i] = this.listC[i];\n    }\n  }\n\n  /*=================================================*/\n\n  handleShowList() {\n    this.setState({\n      articlesHidden: !this.state.articlesHidden,\n    })\n    if(!this.state.articlesHidden) {\n      if(this.state.articlesCounter > this.elementsCounter) {\n        this.setState({\n          articlesToShow: this.shortList,\n          showButton: 'Hide Articles'\n        })\n      } else {\n        this.setState({\n          articlesToShow: this.listC,\n          showButton: 'Hide Articles'\n        })\n      }\n    } else {\n      this.setState({\n        articlesToShow: [],\n        showButton: 'Show Articles'\n      })\n    }\n    for(let i = 0; i < this.elementsCounter; i++) {\n      this.shortList[i] = this.listC[i];\n    }\n    if(this.state.articlesCounter > 0) {\n      this.setState({\n        moreButton: !this.state.moreButton\n      })\n    } else {\n      this.setState({\n        moreButton: false\n      })\n    }\n  }\n\n  /*=================================================*/\n\n  clearFields() {\n    this.setState({\n      userTitle: '',\n      userText: ''\n    })\n  }\n\n  /*=================================================*/\n\n  deleteArticles() {\n    this.setState({\n      articlesToShow: [],\n      articlesCounter: 0,\n      moreButton: false\n    })\n    for(let i = 0; i < this.listC.length; i++) {\n      this.listC.splice(i);\n    }\n  }\n\n  /*=================================================*/\n\n  render() {\n    if(!(this.listC.length - this.shortList.length < 1) && this.state.moreButton) {\n        this.moreButtonRender = <ShowMoreButton itteratorUp={this.elementsCounterAdd} />\n    } else {\n      this.moreButtonRender = ''\n    }\n    console.log(this.listC.length);\n\n    if(this.state.editorVisible) {\n      this.editorRender = <Editor\n        addingElement={this.addElement}\n        clearingFields={this.clearFields}\n        addedArticlesCounter={this.state.articlesCounter}\n        settingTitle={this.setTitle}\n        settingText={this.setText}\n        titleEmpty={this.state.userTitle}\n        textEmpty={this.state.userText}\n      />\n    } else {\n      this.editorRender = ''\n    }\n\n    if(this.state.showActive) {\n      this.activeButtonRender = <a onClick={this.handleShowList}>{this.state.showButton}</a>\n    } else {\n      this.activeButtonRender = <a className=\"unactive\">{this.state.showButton}</a>\n    }\n\n    if(!this.state.articlesHidden) {\n      this.activeEditRender = <a onClick={this.editPanelOPening}>{this.state.hidePanelButton}</a>\n    } else {\n      this.activeEditRender = <a className=\"unactive\">Edit Panel</a>\n    }\n\n    if(this.state.articlesHidden) {\n      this.edditorButtonRender = <a onClick={this.deleteArticles}>Clear Articles</a>\n    } else {\n      this.edditorButtonRender = <a className=\"unactive\">Clear Articles</a>\n    }\n\n    return(\n      <div className=\"container\">\n        <Header\n          showActiveButton={this.activeButtonRender}\n          showEditButton={this.activeEditRender}\n          showHidderButton={this.edditorButtonRender}\n        />\n        <div className=\"content\">\n          <Content\n            articlesList={this.state.articlesToShow}\n          />\n          {this.moreButtonRender}\n          {this.editorRender}\n        </div>\n      </div>\n    );\n  }\n}\n\n  /*=================================================*/\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}